// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Ed_Fi.Credential.Domain.Model
{

    // ClaimSetResourceClaims
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.32.0.0")]
    public partial class ClaimSetResourceClaimConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ClaimSetResourceClaim>
    {
        public ClaimSetResourceClaimConfiguration()
            : this("dbo")
        {
        }

        public ClaimSetResourceClaimConfiguration(string schema)
        {
            ToTable("ClaimSetResourceClaims", schema);
            HasKey(x => x.ClaimSetResourceClaimId);

            Property(x => x.ClaimSetResourceClaimId).HasColumnName(@"ClaimSetResourceClaimId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ActionActionId).HasColumnName(@"Action_ActionId").HasColumnType("int").IsRequired();
            Property(x => x.ClaimSetClaimSetId).HasColumnName(@"ClaimSet_ClaimSetId").HasColumnType("int").IsRequired();
            Property(x => x.ResourceClaimResourceClaimId).HasColumnName(@"ResourceClaim_ResourceClaimId").HasColumnType("int").IsRequired();
            Property(x => x.AuthorizationStrategyOverrideAuthorizationStrategyId).HasColumnName(@"AuthorizationStrategyOverride_AuthorizationStrategyId").HasColumnType("int").IsOptional();
            Property(x => x.ValidationRuleSetNameOverride).HasColumnName(@"ValidationRuleSetNameOverride").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);

            // Foreign keys
            HasOptional(a => a.AuthorizationStrategy).WithMany(b => b.ClaimSetResourceClaims).HasForeignKey(c => c.AuthorizationStrategyOverrideAuthorizationStrategyId).WillCascadeOnDelete(false); // FK_dbo.ClaimSetResourceClaims_dbo.AuthorizationStrategies_AuthorizationStrategyOverride_AuthorizationStrategyId
            HasRequired(a => a.Action).WithMany(b => b.ClaimSetResourceClaims).HasForeignKey(c => c.ActionActionId); // FK_dbo.ClaimSetResourceClaims_dbo.Actions_Action_ActionId
            HasRequired(a => a.ClaimSet).WithMany(b => b.ClaimSetResourceClaims).HasForeignKey(c => c.ClaimSetClaimSetId); // FK_dbo.ClaimSetResourceClaims_dbo.ClaimSets_ClaimSet_ClaimSetId
            HasRequired(a => a.ResourceClaim).WithMany(b => b.ClaimSetResourceClaims).HasForeignKey(c => c.ResourceClaimResourceClaimId).WillCascadeOnDelete(false); // FK_dbo.ClaimSetResourceClaims_dbo.ResourceClaims_ResourceClaim_ResourceClaimId
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
