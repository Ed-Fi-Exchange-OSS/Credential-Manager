// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Ed_Fi.Credential.Domain.Model
{

    // Subscription
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.32.0.0")]
    public partial class SubscriptionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Subscription>
    {
        public SubscriptionConfiguration()
            : this("dbo")
        {
        }

        public SubscriptionConfiguration(string schema)
        {
            ToTable("Subscription", schema);
            HasKey(x => x.SubscriptionId);

            Property(x => x.SubscriptionId).HasColumnName(@"SubscriptionId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SubscriptionActionId).HasColumnName(@"SubscriptionActionId").HasColumnType("int").IsRequired();
            Property(x => x.EducationOrganizationId).HasColumnName(@"EducationOrganizationId").HasColumnType("int").IsRequired();
            Property(x => x.VendorId).HasColumnName(@"VendorId").HasColumnType("int").IsRequired();
            Property(x => x.WamsId).HasColumnName(@"WamsId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(30);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime2").IsRequired();

            // Foreign keys
            HasRequired(a => a.SubscriptionAction).WithMany(b => b.Subscriptions).HasForeignKey(c => c.SubscriptionActionId).WillCascadeOnDelete(false); // FK_Subscription_SubscriptionAction
            HasRequired(a => a.Vendor).WithMany(b => b.Subscriptions).HasForeignKey(c => c.VendorId).WillCascadeOnDelete(false); // FK_Subscription_Vendor
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
