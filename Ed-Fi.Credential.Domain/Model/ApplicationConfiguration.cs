// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Ed_Fi.Credential.Domain.Model
{

    // Applications
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.32.0.0")]
    public partial class ApplicationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Application>
    {
        public ApplicationConfiguration()
            : this("dbo")
        {
        }

        public ApplicationConfiguration(string schema)
        {
            ToTable("Applications", schema);
            HasKey(x => x.ApplicationId);

            Property(x => x.ApplicationId).HasColumnName(@"ApplicationId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ApplicationName).HasColumnName(@"ApplicationName").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.VendorVendorId).HasColumnName(@"Vendor_VendorId").HasColumnType("int").IsOptional();
            Property(x => x.ClaimSetName).HasColumnName(@"ClaimSetName").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.OdsInstanceOdsInstanceId).HasColumnName(@"OdsInstance_OdsInstanceId").HasColumnType("int").IsOptional();
            Property(x => x.OperationalContextUri).HasColumnName(@"OperationalContextUri").HasColumnType("nvarchar").IsRequired().HasMaxLength(255);

            // Foreign keys
            HasOptional(a => a.Vendor).WithMany(b => b.Applications).HasForeignKey(c => c.VendorVendorId).WillCascadeOnDelete(false); // FK_dbo.Applications_dbo.Vendors_Vendor_VendorId
            HasMany(t => t.Profiles).WithMany(t => t.Applications).Map(m =>
            {
                m.ToTable("ProfileApplications", "dbo");
                m.MapLeftKey("Application_ApplicationId");
                m.MapRightKey("Profile_ProfileId");
            });
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
