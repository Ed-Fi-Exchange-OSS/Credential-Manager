// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Ed_Fi.Credential.Domain.Model
{

    // Crosstab
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.32.0.0")]
    public partial class CrosstabConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Crosstab>
    {
        public CrosstabConfiguration()
            : this("dbo")
        {
        }

        public CrosstabConfiguration(string schema)
        {
            ToTable("Crosstab", schema);
            HasKey(x => new { x.RowId, x.ApiClientId, x.ApiClientName, x.ApiKey, x.Secret });

            Property(x => x.RowId).HasColumnName(@"RowId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(25).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ApiClientId).HasColumnName(@"ApiClientId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SchoolId).HasColumnName(@"SchoolId").HasColumnType("int").IsOptional();
            Property(x => x.SchoolName).HasColumnName(@"SchoolName").HasColumnType("nvarchar").IsOptional().HasMaxLength(75);
            Property(x => x.LeaId).HasColumnName(@"LeaId").HasColumnType("int").IsOptional();
            Property(x => x.LeaName).HasColumnName(@"LeaName").HasColumnType("nvarchar").IsOptional().HasMaxLength(75);
            Property(x => x.VendorName).HasColumnName(@"VendorName").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.ApiClientName).HasColumnName(@"ApiClientName").HasColumnType("nvarchar").IsRequired().HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ApiKey).HasColumnName(@"ApiKey").HasColumnType("nvarchar").IsRequired().HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Secret).HasColumnName(@"Secret").HasColumnType("nvarchar").IsRequired().HasMaxLength(100).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ClaimSetName).HasColumnName(@"ClaimSetName").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.ProfileName).HasColumnName(@"ProfileName").HasColumnType("nvarchar(max)").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
