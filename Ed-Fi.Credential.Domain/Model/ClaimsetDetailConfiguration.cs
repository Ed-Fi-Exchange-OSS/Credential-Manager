// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Ed_Fi.Credential.Domain.Model
{

    // ClaimsetDetails
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.32.0.0")]
    public partial class ClaimsetDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ClaimsetDetail>
    {
        public ClaimsetDetailConfiguration()
            : this("dbo")
        {
        }

        public ClaimsetDetailConfiguration(string schema)
        {
            ToTable("ClaimsetDetails", schema);
            HasKey(x => x.ClaimSetName);

            Property(x => x.ClaimSetName).HasColumnName(@"ClaimSetName").HasColumnType("nvarchar").IsRequired().HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PlainEnglish).HasColumnName(@"PlainEnglish").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1000);
            Property(x => x.LogicalDomain).HasColumnName(@"LogicalDomain").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.PrimarySis).HasColumnName(@"PrimarySis").HasColumnType("bit").IsRequired();
            Property(x => x.PublicClaimset).HasColumnName(@"PublicClaimset").HasColumnType("bit").IsRequired();
            Property(x => x.ChoiceClaimset).HasColumnName(@"ChoiceClaimset").HasColumnType("bit").IsRequired();
            Property(x => x.SchoolLevelClaimset).HasColumnName(@"SchoolLevelClaimset").HasColumnType("bit").IsRequired();
            Property(x => x.ReadOnlyClaimset).HasColumnName(@"ReadOnlyClaimset").HasColumnType("bit").IsRequired();
            Property(x => x.Active).HasColumnName(@"Active").HasColumnType("bit").IsRequired();
            Property(x => x.RequirementYear).HasColumnName(@"RequirementYear").HasColumnType("int").IsOptional();
            Property(x => x.ProfileId).HasColumnName(@"ProfileId").HasColumnType("int").IsOptional();
            Property(x => x.ClaimsetTypeId).HasColumnName(@"ClaimsetTypeId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.ClaimsetType).WithMany(b => b.ClaimsetDetails).HasForeignKey(c => c.ClaimsetTypeId).WillCascadeOnDelete(false); // FK_ClaimsetDetail_ClaimsetType
            HasOptional(a => a.Profile).WithMany(b => b.ClaimsetDetails).HasForeignKey(c => c.ProfileId).WillCascadeOnDelete(false); // FK_ClaimsetDetail_Profile
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
