// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Ed_Fi.Credential.Domain.Model
{

    public interface IEdFiSecurityDbContextBase : System.IDisposable
    {
        System.Data.Entity.DbSet<Action> Actions { get; set; } // Actions
        System.Data.Entity.DbSet<AllowedActionsByClaimset> AllowedActionsByClaimsets { get; set; } // AllowedActionsByClaimset
        System.Data.Entity.DbSet<AuthorizationStrategy> AuthorizationStrategies { get; set; } // AuthorizationStrategies
        System.Data.Entity.DbSet<ClaimSet> ClaimSets { get; set; } // ClaimSets
        System.Data.Entity.DbSet<ClaimSetResourceClaim> ClaimSetResourceClaims { get; set; } // ClaimSetResourceClaims
        System.Data.Entity.DbSet<ResourceClaim> ResourceClaims { get; set; } // ResourceClaims
        System.Data.Entity.DbSet<SecurityStrategy> SecurityStrategies { get; set; } // SecurityStrategies

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

}
// </auto-generated>
